#!/bin/bash

# run script/test -h for help

set -e

function usage()
{
    echo -e "\t ================== script/test usage =================="
    echo -e "\t-h --help               : displays help message"
    echo -e "\t-d --disable-bootstrap  : disables bootstrap"
    echo -e "\n\t Suggested flags for development: script/test -d"
}

while [ "$1" != "" ]; do
    PARAM=`echo $1 | awk -F= '{print $1}'`
    VALUE=`echo $1 | awk -F= '{print $2}'`
    case $PARAM in
      -h | --help)
        usage
        exit
        ;;
      -k | --no-linter)
        no_linter=1
        ;;
      -d | --disable-bootstrap)
        no_bootstrap=1
        ;;
      *)
      echo "ERROR: unknown parameter \"$PARAM\""
      usage
      exit 1
      ;;
    esac
    shift
done

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd .. && pwd )"

export PATH=/usr/share/rbenv/shims:$PATH
export RBENV_VERSION="$(cat "${DIR}/.ruby-version")"

TRASHDIR=$(mktemp -d /tmp/cibuild.XXXXXXXXXXXXXXXXXX)
cleanup() {
  rm -rf "$TRASHDIR"
}
trap cleanup EXIT

cd "$DIR"
. "${DIR}/script/lib/fold.sh"

if [[ -z $no_bootstrap ]]; then
  # bootstrap
  begin_fold "Bootstrapping"
  ./script/bootstrap
  end_fold
else
  echo -e "\nBypass Bootstrap"
fi

bundle exec rspec spec/unit && rspec_exit=$? || rspec_exit=$?

cat "$DIR/coverage/coverage.txt"
grep -q "You're all set, friend" "$DIR/coverage/coverage.txt" && cov_exit=0 || cov_exit=1

echo ""
echo "---------------------------------------"
echo "Summary Results"
echo "---------------------------------------"
echo ""
echo "rspec:       exitcode=${rspec_exit}"
echo "coverage:    exitcode=${cov_exit}"

[ $rspec_exit -gt 0 ] && exit 1
[ $cov_exit -gt 0 ] && exit 1
exit 0
